# name: vorpal-reviewdog
# on:
#   push:
#     branches: [ "main", "master" ]
#   pull_request:
#     branches: [ "main", "master" ]
# jobs:
#   vorpal:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Vorpal with reviewdog
#         uses: checkmarx/vorpal-reviewdog-github-action@v1.0.0
#         with:
#           source_path: app/routes/index.js,app/routes/memos.js,app/routes/contributions.js,app/routes/tutorial.js,app/routes/allocations.js,app/routes/research.js,app/routes/session.js,app/routes/profile.js,app/routes/error.js,app/routes/benefits.js,app/data/contributions-dao.js,app/data/allocations-dao.js,app/data/memos-dao.js,app/data/benefits-dao.js,app/data/profile-dao.js,app/data/user-dao.js,app/data/research-dao.js,server.js,config/config.js
#           filter_mode: file
#           github_token: ${{ secrets.github_token }}
#           reporter: github-pr-check
#           level: error
#           fail_on_error: false

name: vorpal-reviewdog
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  SCAN_FILES: app/routes/index.js,app/routes/memos.js,app/routes/contributions.js,app/routes/tutorial.js,app/routes/allocations.js,app/routes/research.js,app/routes/session.js,app/routes/profile.js,app/routes/error.js,app/routes/benefits.js,app/data/contributions-dao.js,app/data/allocations-dao.js,app/data/memos-dao.js,app/data/benefits-dao.js,app/data/profile-dao.js,app/data/user-dao.js,app/data/research-dao.js,server.js,config/config.js

jobs:
  vorpal:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write
      
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      # STEP 1: Run Vorpal to generate SARIF report
      - name: Scan for SARIF report
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/src \
            --workdir /src \
            checkmarx/vorpal-cli:1.0.116 \
            scan \
            -s ${{ env.SCAN_FILES }} \
            --sarif-output vorpal-results.sarif

      # STEP 2: Run Vorpal with reviewdog for PR comments
      - name: Vorpal with reviewdog for PR comments
        uses: checkmarx/vorpal-reviewdog-github-action@v1.0.0
        with:
          source_path: ${{ env.SCAN_FILES }}
          filter_mode: file
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
          level: error
          fail_on_error: false
      
      # STEP 3: Upload the SARIF file generated in Step 1
      - name: Upload SARIF to Security Tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: vorpal-results.sarif